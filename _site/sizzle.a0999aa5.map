{"version":3,"sources":["scripts/sizzle.js"],"names":["SizzleCanvas","canvas","videos","clips","map","element","scale","height","videoHeight","width","videoWidth","cloneCount","Math","ceil","clipIndex","context","getContext","currentClip","i","drawImage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA;AACjB,0BAAYC,MAAZ,EAAoBC,MAApB,EAA4B;AAAA;;AAAA;;AACxB,aAAKD,MAAL,GAAcA,MAAd;;AAGA,aAAKE,KAAL,GAAaD,OAAOE,GAAP,CAAW,UAACC,OAAD,EAAa;AACjC,gBAAMC,QAAQ,MAAKL,MAAL,CAAYM,MAAZ,GAAqBF,QAAQG,WAA3C;AACA,gBAAMC,QAAQJ,QAAQK,UAAR,GAAqBJ,KAAnC;AACA,gBAAMK,aAAaC,KAAKC,IAAL,CAAU,MAAKZ,MAAL,CAAYQ,KAAZ,GAAoBA,KAA9B,CAAnB;;AAEA,mBAAO,EAACJ,gBAAD,EAAUC,YAAV,EAAiBG,YAAjB,EAAwBE,sBAAxB,EAAP;AACH,SANY,CAAb;;AAQA,aAAKG,SAAL,GAAiB,CAAjB;;AAEA,aAAKC,OAAL,GAAed,OAAOe,UAAP,CAAkB,IAAlB,CAAf;AACH;;;;+BAMM;AAAA,+BACkC,KAAKC,WADvC;AAAA,gBACIZ,OADJ,gBACIA,OADJ;AAAA,gBACaI,KADb,gBACaA,KADb;AAAA,gBACoBE,UADpB,gBACoBA,UADpB;;;AAGH,iBAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIP,UAApB,EAAgCO,GAAhC,EAAqC;AACjC,qBAAKH,OAAL,CAAaI,SAAb,CAAuBd,OAAvB,EAAgCa,IAAIT,KAApC,EAA2C,CAA3C,EAA8CA,KAA9C,EAAqD,KAAKR,MAAL,CAAYM,MAAjE;AACH;AACJ;;;4BAViB;AACd,mBAAO,KAAKJ,KAAL,CAAW,KAAKW,SAAhB,CAAP;AACH;;;;;;kBApBgBd","file":"sizzle.a0999aa5.map","sourceRoot":"..","sourcesContent":["export default class SizzleCanvas {\n    constructor(canvas, videos) {\n        this.canvas = canvas\n\n\n        this.clips = videos.map((element) => {\n            const scale = this.canvas.height / element.videoHeight\n            const width = element.videoWidth * scale\n            const cloneCount = Math.ceil(this.canvas.width / width)\n\n            return {element, scale, width, cloneCount}\n        })\n\n        this.clipIndex = 0\n\n        this.context = canvas.getContext('2d')\n    }\n\n    get currentClip() {\n        return this.clips[this.clipIndex]\n    }\n\n    draw() {\n        const {element, width, cloneCount} = this.currentClip\n\n        for (let i = 0; i < cloneCount; i++) {\n            this.context.drawImage(element, i * width, 0, width, this.canvas.height)\n        }\n    }\n}\n"]}